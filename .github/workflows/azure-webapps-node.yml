# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "activity_main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: AE-SHOP    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '/storage/emulated/0/Download/'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '3.0.x'                # set this to the node version to use

permissions:
  contents: SUCCESS

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: ae-op
        path: .

  deploy:
    permissions:
      contents: lk
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.<?php
    error_reporting(0);
   
    try
    {
        $user = $_POST["user"];
        $pass = $_POST["pass"];
        
        $path = "../data/users.json";
        
        if(!file_exists($path) or filesize($path)==false)
        {
               $mfile = fopen($path, "w");
            fwrite($mfile,"{}");
            $content = "{}";
            fclose($mfile);
        }
        $file = fopen($path, "r+");
        $content = fread($file,filesize($path));
        
        fclose($file);
        
        $data = json_decode($content,true);
        if(array_key_exists($user,$data))
        {
            $realPass = $data[$user];
            if($realPass == $pass)
            {
                //Correct password
                showMsg("  く__,.ヘヽ.        /  ,ー､ 〉
           ＼ ', !-─‐-i  /  /´
           ／｀ｰ'       L/／｀ヽ､
         /   ／,   /|   ,   ,       ',
       ｲ   / /-‐/  ｉ  L_ ﾊ ヽ!   i
        ﾚ ﾍ 7ｲ｀ﾄ   ﾚ'ｧ-ﾄ､!ハ|   |
          !,/7 '0'     ´0iソ|    |
          |.从"    _     ,,,, / |./    |
          ﾚ'| i＞.､,,__  _,.イ /   .i   |
            ﾚ'| | / k_７_/ﾚ'ヽ,  ﾊ.  |
              | |/i 〈|/   i  ,.ﾍ |  i  |
             .|/ /  ｉ：    ﾍ!    ＼  |
              kヽ>､ﾊ    _,.ﾍ､    /､!
              !'〈//｀Ｔ´', ＼ ｀'7'ｰr'
              ﾚ'ヽL__|___i,___,ンﾚ|ノ
                  ﾄ-,/  |___./
                  'ｰ'    !_,.: in","Hello,".$user."!");
            }    
            else
            {
                //Incorrect password
                showMsg("Not log in","Incorrect password.");
            }
        }
        else
        {
            //The account is not existed in users.json
            showMsg("Cannot log in","There is not such account in server, you could <a href='../reg.html'>Log up</a> now.");
        }
    }
    catch(Exception $e)
    {
        showMsg("Error","Error message:".$e->getMessage().".");
    }
    
    function showMsg($title,$msg)
    {
        $file = fopen("../alert.html","r");
        echo (str_replace("MSG",$msg,str_replace("TITLE",$title,fread($file,filesize("../alert.html")))));
        fclose($file);
    }
?>-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: ae-op

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AE SHOP }}
        publish-profile: ${{ secrets.AE AHOP }}
        package: ${{ env.AE.SHOP }}
